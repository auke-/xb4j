TODO
----
- Use Generics in XmlStreamer (toJava method)
- add multithreaded locking testcase 
- lock ISemaphore on copy operations
- resolve all constructor argument references (as far as possible) on first use of a root binding
- add switch to make bindingmodel immutable
- provide converters between data types of Java/xml world for all defined xml schema data types, including facets etc.
- allow the java instance to be constructed by a non-default constructor method
- allow the java instance to be created through a factory method
- simplify API -- where possible
- support atributegroups
- support any type
- support mixed content
- support nillable xml types
- support key / keyref (aka ID / IDREF) xml types
- configure binding through xml binding file (TBD: are we gonna support this?)


DONE
----
20120213  bind a java class to an xml element and marshall/unmarshall
20120214  allow the element to have namespaces
20120229  add converter mechanism to convert Java field to and from a String
20120306  marshall/unmarshall a java object tree
20120309  register javaclass with namespace with bindingmodel (allow same class be registered multiple times in different namespaces)
20120427  added rudimentary support for attributes (incl. namespaces for atrtibutes)
20141024  use XmlStreamer to marshall / unmarshall. This is a wrapper around a binding.
20141024  resolve all complex types on first use of a root binding
